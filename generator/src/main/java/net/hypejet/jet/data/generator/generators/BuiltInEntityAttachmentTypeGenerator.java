package net.hypejet.jet.data.generator.generators;

import com.squareup.javapoet.ClassName;
import com.squareup.javapoet.FieldSpec;
import net.hypejet.jet.data.entity.attachment.type.EntityAttachmentType;
import net.hypejet.jet.data.generator.ConstantGenerator;
import net.hypejet.jet.data.generator.util.CodeBlocks;
import net.hypejet.jet.data.generator.util.JavaDocBuilder;
import net.minecraft.world.entity.EntityAttachment;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.slf4j.Logger;

import javax.lang.model.element.Modifier;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * Represents a {@linkplain ConstantGenerator constant generator}, which generates built-in Minecraft entity attachment
 * types using data defined in an {@linkplain net.minecraft.world.entity.EntityAttachments entity attachments enum}.
 *
 * @since 1.0
 * @author Codestech
 * @see net.minecraft.world.entity.EntityAttachments
 * @see ConstantGenerator
 */
public final class BuiltInEntityAttachmentTypeGenerator extends ConstantGenerator {

    private static final String PACKAGE = "net.hypejet.jet.data.entity.attachment.type";

    private static final Class<?> CONSTANT_CLASS = EntityAttachmentType.class;

    static final ClassName CLASS_NAME = ClassName.get(PACKAGE, "BuiltInEntityAttachmentTypes");

    /**
     * Constructs the {@linkplain BuiltInEntityAttachmentTypeGenerator built-in entity attachment generator}.
     *
     * @since 1.0
     */
    public BuiltInEntityAttachmentTypeGenerator() {
        super(PACKAGE, CLASS_NAME, CONSTANT_CLASS,
                JavaDocBuilder.builder()
                        .line("Represents a holder of all built-in Minecraft entity attachment types.")
                        .paragraph("Code autogenerated, do not edit!")
                        .emptyLine()
                        .since("1.0")
                        .see(CONSTANT_CLASS)
                        .build(),
                JavaDocBuilder.builder()
                        .line("Gets all built-in Minecraft entity attachment types.")
                        .emptyLine()
                        .returns("the attachments")
                        .since("1.0")
                        .build());
    }

    @Override
    public @NonNull Collection<FieldSpec> generateFields(@NonNull Logger logger) {
        List<FieldSpec> specs = new ArrayList<>();

        ClassName implClass = ClassName.get(PACKAGE, "EntityAttachmentTypeImpl");
        for (EntityAttachment attachment : EntityAttachment.values()) {
            specs.add(FieldSpec.builder(CONSTANT_CLASS, constantName(attachment))
                    .addModifiers(Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL)
                    .initializer(CodeBlocks.constructor(implClass, CodeBlocks.string(attachment.name())))
                    .build());
        }

        return List.copyOf(specs);
    }

    static @NonNull String constantName(@NonNull EntityAttachment attachment) {
        return attachment.name();
    }
}
