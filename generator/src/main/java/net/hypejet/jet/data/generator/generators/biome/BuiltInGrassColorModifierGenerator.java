package net.hypejet.jet.data.generator.generators.biome;

import com.squareup.javapoet.ClassName;
import com.squareup.javapoet.FieldSpec;
import net.hypejet.jet.data.biome.grass.GrassColorModifier;
import net.hypejet.jet.data.generator.ConstantGenerator;
import net.hypejet.jet.data.generator.util.CodeBlocks;
import net.hypejet.jet.data.generator.util.JavaDocBuilder;
import net.minecraft.world.level.biome.BiomeSpecialEffects;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.slf4j.Logger;

import javax.lang.model.element.Modifier;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * Represents a {@linkplain ConstantGenerator constant generator}, which generates {@linkplain GrassColorModifier grass
 * color modifiers} using data defined in {@linkplain BiomeSpecialEffects.GrassColorModifier Minecraft biome grass
 * color modifier enum}.
 *
 * @since 1.0
 * @author Codestech
 * @see GrassColorModifier
 * @see BiomeSpecialEffects.GrassColorModifier
 * @see ConstantGenerator
 */
public final class BuiltInGrassColorModifierGenerator extends ConstantGenerator {

    private static final String PACKAGE = "net.hypejet.jet.data.biome.grass";

    static final ClassName CLASS_NAME = ClassName.get(PACKAGE, "BuiltInGrassColorModifiers");

    /**
     * Constructs the {@linkplain BuiltInGrassColorModifierGenerator built-in grass color modifier generator}.
     *
     * @since 1.0
     */
    public BuiltInGrassColorModifierGenerator() {
        super(PACKAGE, CLASS_NAME, GrassColorModifier.class,
                JavaDocBuilder.builder()
                        .line("Represents a holder of built-in Minecraft grass color modifiers.")
                        .paragraph("Code autogenerated, do not edit!")
                        .emptyLine()
                        .since("1.0")
                        .see(GrassColorModifier.class)
                        .build(),
                JavaDocBuilder.builder()
                        .line("Gets all built-in grass color modifiers.")
                        .emptyLine()
                        .returns("the grass color modifiers")
                        .since("1.0")
                        .see(GrassColorModifier.class)
                        .build());
    }

    @Override
    public @NonNull Collection<FieldSpec> generateFields(@NonNull Logger logger) {
        List<FieldSpec> fieldSpecs = new ArrayList<>();
        ClassName implClassName = ClassName.get(PACKAGE, "GrassColorModifierImpl");

        for (BiomeSpecialEffects.GrassColorModifier value : BiomeSpecialEffects.GrassColorModifier.values()) {
            fieldSpecs.add(FieldSpec.builder(GrassColorModifier.class, value.name())
                    .addModifiers(Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL)
                    .initializer(CodeBlocks.constructor(implClassName, CodeBlocks.string(value.getName())))
                    .build());
        }

        return List.copyOf(fieldSpecs);
    }

    /**
     * Creates a constant name for a {@linkplain BiomeSpecialEffects.GrassColorModifier Minecraft biome grass color
     * modifier}.
     *
     * @param grassColorModifier the grass color modifier
     * @return the constant name
     * @since 1.0
     */
    static @NonNull String constantName(BiomeSpecialEffects.@NonNull GrassColorModifier grassColorModifier) {
        return grassColorModifier.name();
    }
}